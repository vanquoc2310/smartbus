// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using SmartBus_BusinessObjects.Models;

namespace Backend_SmartBus.Services;

public partial class SmartBusContext : DbContext
{
    public SmartBusContext(DbContextOptions<SmartBusContext> options)
        : base(options)
    {
    }

    public virtual DbSet<BusRoute> BusRoutes { get; set; }

    public virtual DbSet<BusStop> BusStops { get; set; }

    public virtual DbSet<BusVehicleLocation> BusVehicleLocations { get; set; }

    public virtual DbSet<PaymentOrder> PaymentOrders { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<RouteSchedule> RouteSchedules { get; set; }

    public virtual DbSet<RouteStop> RouteStops { get; set; }

    public virtual DbSet<RouteTicketPrice> RouteTicketPrices { get; set; }

    public virtual DbSet<Schedule> Schedules { get; set; }

    public virtual DbSet<Ticket> Tickets { get; set; }

    public virtual DbSet<TicketType> TicketTypes { get; set; }

    public virtual DbSet<TicketUsageLog> TicketUsageLogs { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<BusRoute>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__BusRoute__3214EC07B37225F3");

            entity.ToTable("BusRoute");

            entity.Property(e => e.Id).HasMaxLength(10);
            entity.Property(e => e.BusType).HasMaxLength(50);
            entity.Property(e => e.DistanceKm).HasColumnType("decimal(5, 2)");
            entity.Property(e => e.RouteCode)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.RouteName).HasMaxLength(255);
            entity.Property(e => e.TripInterval).HasMaxLength(50);
        });

        modelBuilder.Entity<BusStop>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__BusStop__3214EC07CF008501");

            entity.ToTable("BusStop");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Code)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Name).HasMaxLength(255);
        });

        modelBuilder.Entity<BusVehicleLocation>(entity =>
        {
            entity.HasKey(e => e.VehicleId).HasName("PK__BusVehic__476B5492F74E9E52");

            entity.ToTable("BusVehicleLocation");

            entity.Property(e => e.VehicleId).ValueGeneratedNever();
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.RouteId).HasMaxLength(10);

            entity.HasOne(d => d.Route).WithMany(p => p.BusVehicleLocations)
                .HasForeignKey(d => d.RouteId)
                .HasConstraintName("FK__BusVehicl__Route__31EC6D26");
        });

        modelBuilder.Entity<PaymentOrder>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PaymentO__3214EC07BE14E1B7");

            entity.ToTable("PaymentOrder");

            entity.HasIndex(e => e.OrderCode, "UQ__PaymentO__999B5229CB0B8346").IsUnique();

            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Role__3214EC07CF78B843");

            entity.ToTable("Role");

            entity.Property(e => e.RoleName).HasMaxLength(50);
        });

        modelBuilder.Entity<RouteSchedule>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RouteSch__3214EC07F6C8A696");

            entity.ToTable("RouteSchedule");

            entity.Property(e => e.RouteId).HasMaxLength(10);

            entity.HasOne(d => d.Route).WithMany(p => p.RouteSchedules)
                .HasForeignKey(d => d.RouteId)
                .HasConstraintName("FK__RouteSche__Route__2E1BDC42");

            entity.HasOne(d => d.Schedule).WithMany(p => p.RouteSchedules)
                .HasForeignKey(d => d.ScheduleId)
                .HasConstraintName("FK__RouteSche__Sched__2F10007B");
        });

        modelBuilder.Entity<RouteStop>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RouteSto__3214EC075BBA2123");

            entity.ToTable("RouteStop");

            entity.Property(e => e.RouteId).HasMaxLength(10);

            entity.HasOne(d => d.Route).WithMany(p => p.RouteStops)
                .HasForeignKey(d => d.RouteId)
                .HasConstraintName("FK__RouteStop__Route__286302EC");

            entity.HasOne(d => d.Stop).WithMany(p => p.RouteStops)
                .HasForeignKey(d => d.StopId)
                .HasConstraintName("FK__RouteStop__StopI__29572725");
        });

        modelBuilder.Entity<RouteTicketPrice>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RouteTic__3214EC07ACFFBEC1");

            entity.ToTable("RouteTicketPrice");

            entity.Property(e => e.Price).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.RouteId).HasMaxLength(10);
            entity.Property(e => e.TicketName).HasMaxLength(100);

            entity.HasOne(d => d.Route).WithMany(p => p.RouteTicketPrices)
                .HasForeignKey(d => d.RouteId)
                .HasConstraintName("FK__RouteTick__Route__3E52440B");

            entity.HasOne(d => d.TicketType).WithMany(p => p.RouteTicketPrices)
                .HasForeignKey(d => d.TicketTypeId)
                .HasConstraintName("FK__RouteTick__Ticke__3F466844");
        });

        modelBuilder.Entity<Schedule>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Schedule__3214EC07D571D98D");

            entity.ToTable("Schedule");

            entity.Property(e => e.Id).ValueGeneratedNever();
        });

        modelBuilder.Entity<Ticket>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Ticket__3214EC07D0C97CEB");

            entity.ToTable("Ticket");

            entity.Property(e => e.ExpiredAt).HasColumnType("datetime");
            entity.Property(e => e.IsActive).HasDefaultValue(true);
            entity.Property(e => e.IssuedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Price).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Qrcode).HasColumnName("QRCode");
            entity.Property(e => e.RouteId).HasMaxLength(10);

            entity.HasOne(d => d.Route).WithMany(p => p.Tickets)
                .HasForeignKey(d => d.RouteId)
                .HasConstraintName("FK__Ticket__RouteId__44FF419A");

            entity.HasOne(d => d.TicketType).WithMany(p => p.Tickets)
                .HasForeignKey(d => d.TicketTypeId)
                .HasConstraintName("FK__Ticket__TicketTy__45F365D3");

            entity.HasOne(d => d.User).WithMany(p => p.Tickets)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Ticket__UserId__440B1D61");
        });

        modelBuilder.Entity<TicketType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TicketTy__3214EC07D601BB8D");

            entity.ToTable("TicketType");

            entity.Property(e => e.IsUnlimited).HasDefaultValue(false);
            entity.Property(e => e.Name).HasMaxLength(50);
        });

        modelBuilder.Entity<TicketUsageLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TicketUs__3214EC071A74B8CD");

            entity.ToTable("TicketUsageLog");

            entity.Property(e => e.IsValidScan).HasDefaultValue(true);
            entity.Property(e => e.Location).HasMaxLength(255);
            entity.Property(e => e.ScannedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ScannedBy).HasMaxLength(100);

            entity.HasOne(d => d.Ticket).WithMany(p => p.TicketUsageLogs)
                .HasForeignKey(d => d.TicketId)
                .HasConstraintName("FK__TicketUsa__Ticke__4AB81AF0");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__User__3214EC07AF808CF2");

            entity.ToTable("User");

            entity.HasIndex(e => e.Email, "UQ__User__A9D10534D7FCB74D").IsUnique();

            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.Password)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.Role).WithMany(p => p.Users)
                .HasForeignKey(d => d.RoleId)
                .HasConstraintName("FK__User__RoleId__38996AB5");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}